version: '3.3'
services:
  app:
    build:
      context: .
    depends_on:
      - db
      - chrome
    volumes:
      - ./src:/src
      - node_modules:/src/{AppName}/node_modules
    ports:
      - 3000:3000
    networks:
      - backend
    environment:
      - "HOST=localhost:3000"
      - "CHROME_URL=http://chrome:3333/webdriver"
      - "REDIS_URL=redis://redis:6379/1"
      - "DATABASE_HOST=db"
      - "DATABASE_USER=postgres"
      - "DATABASE_PASSWORD=password"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"
    tty: true
    stdin_open: true
    command: dotnet watch run --project="{AppName}/{AppName}.csproj" --urls=http://0.0.0.0:3000/
    #command: rdebug-ide --debug --host 0.0.0.0 --port 1234 -- bin/rails s -p 3000 -b 0.0.0.0
  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"
  db:
    image: postgres:14-alpine
    volumes:
       - db_data:/var/lib/postgresql/data
       - db_dump:/var/dump
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app_development
    ports:
      - 5432:5432
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"
  chrome:
    image: browserless/chrome:1.51-chrome-stable
    ports:
      - "3333:3333"
    # Mount application source code to support file uploading
    # (otherwise Chrome won't be able to find files).
    # NOTE: Make sure you use absolute paths in `#attach_file`.
    volumes:
      - .:/app:cached
    networks:
      - backend
    environment:
      # By default, it uses 3000, which is typically used by Rails.
      - "PORT=3333"
      # Set connection timeout to avoid timeout exception during debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      - "CONNECTION_TIMEOUT=600000"
volumes:
  db_data:
  db_dump:
  redis_data:
  node_modules:
networks:
  backend:
